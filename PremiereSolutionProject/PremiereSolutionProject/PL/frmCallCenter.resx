<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAEJ9JREFUeF7Vm3lwFOeZh9k4m6w3cVWyldqtVOWf1P6R3apUduMq7kNCCB3oPkdz
        6L5GI41ujTQSui90ArYDNnFwlrIDJoARYKEbYV1ICNCBrjmEgZgQcxjWjsFG8Ob9vvl6pmemezQSwk7e
        ql/JFrY8z/Pr/vrrbnnVtzG6Ou0r+vriBEN98R8NdTv1hl07H2HAsKtoQV9bdFtfWziEeVNXo43U1eT9
        O/vX/jFH31D0H4bGEj9DQ0kBZh/miKG+5B4GDHXFplB4U1CAKTWFLNoFfXVBl646P2K2Ouuf2Y/9+x4E
        /oWxqazC2Fg2gXmGAWNDKRhICDgXMXizAC3oq7kUgL6q4IauSpMyU/V3KOJqjXqVoanM29hU3oNB6HIw
        hQfvrABL+xZ4kwDQVeWDrlIzO1eZ687+09/+IPg6Y3P5oLGpAkzhwT9P+3wBCM8TQPLsSnHmgdGdqT9g
        H+ObH0NT6SvzzRVvGpsrnmJs4C3tL0nA4u2bM1qUDkMFqVPD2tT/Yh/pmxtsfPV8c6URAxb4b6x9mhGt
        GgbzUzGqzy4UqLaxj/bix7i7ImZ+d9VjMzy/fb6AlW6fJ2CuIg+GKHwqDGhUMJCX8tVQfkow+4gvZqbK
        VKuMeypKEB5onG2fL4DA8wQst/2rpdkWeJMAkidDmpQg9nFXfox7KnfN77HAWwt4zvb5Aii8RYBt+zps
        /3JRBr99S3KVj4c0Shf2kVduEL7QDO+wfYsA2/ZnEXiwTANt2iz4QJMOx/PUcFKjho7CTBgpzQPc+TnV
        Pj38C9LEBEB/rvLekCb5P9lHf/4x7q6UIfyzpbY/g223IGy9MgFS5FIICQ6GwMBAmoCAAPD39wc/Pz9z
        QgL8IV0aDq8pY6FbmyHa/kRJlig8EwADOcljw/lJ/8IQlj+44P1qfk/1l4Lt8wXw2h+qKIAGVSLIwsMg
        GKGDgoLM4cPzBfj6+tL4+PjAjh07aKKCA+HNlDgYL8uxEjCsddg+9Ock0wzkJL3GMJY3ht2lLyP4DAoA
        Z9q/WF0IlcnxEBYaCiEhIRSeExAZFgqaKDnUJcXAPlUC/E6dCO9gfpuaAHuTY6A8Rg4qSSgE+vlSeG9v
        b3OCfH3g9aRomCrLhckSwcXPqn0qIDuJ5NlgbtLy1wOEbjLD8wTYtq/H1t/OTgOpJBxCGTxJXIQEmpXx
        cBYP5/HKApiq0sIsLnQ63sKnw7+fw/N9ujIfJsvz4GJxFvwBxWgVEgjAo8HLy4vG09MTZP6+cDgt3qn2
        mQCS6WFN/NLvHfBy9z8I/2Sx9q/UFkNeXDSEhYXREAHkfH8vOxXGEXiOrPbLWPmnUMaANh3qY+UQgEcE
        EeDh4QEe27dDBcrpt4EXaJ+mLysRvyaoGZbzM7+3qmux9vsrtZAgl5nh5XgEHMhQwgSeCvo63mVPTACF
        5wtAeP6lD8/5GRTRhyu+RhqKArbDdhRAogoJgF5ynvPbFxHQl5VwezA3/l8Z2uKD7W81wYu3f75CC9FS
        qRk+PUoBvSW5oOOu91yW0b7QpW8Yt72vx8nB18uTCnB3d4e4AF84l40SHMPT9GclpDO8xQfb73DU/lBV
        EcTILPAlibEwhq3b7focCXCifS7TeBUg530/nveHU2IgxNuLCti2bRskooTzBNyRgEwa4wVN7HcYovgY
        95T/N8LjNZ/XPk/A1fpSSMG2w8PDKXxFUhxMI9iyd318AQLtk00PaZ+/8p9IjUUJnuDm5kajCQsSgecJ
        yIiH/sx4D4YpPth+vaP2y5WJZvjC+BiELzZvfF5E+3da34dBgV3fH1Ux4ItrwtatW2n2xcoEBJjbpwL6
        MuMOMUzhudqg/ieEviHW/vHCHJBIJFSAUiGHsZoi887vRbR/58xhePZnA4w3l5vb56/8b8fLYZubSYC3
        +zZoU8eJtk/yUUbcg8HcGPFLIi5+rwq1TzLdUAbxCE3gIzCdxblm+BVtnwm4e/Z9Ck9y89QfrOGZgD48
        7IvCg6gAV1dXyAr2F20f4Wn6MmJdGa79ILRGrP0D2Wpz+02pSQiM8Pz2+QIIPE/AUton33/Y1wrPbpvg
        SR7NXYIBcgrYCCALX1dGAgR7bqcCXF1c4FhKtFj78FE6kRBbznDtB8FPWQlg7c8gaAxe7wl8lDQCD31c
        9JbTPl8AhbcIIPDzeyvhy8khK3hT9DD1mzo7eG7lfz1aQgW4oID0QF8TPE8A1z4VkB7bznDtB8FvCrV/
        pCDL3P4b6UoT/Aq3f+vwW7BwY9oELyDg3mC7vQCy8mN6MxMhxMMdtmzZAltRQps6Vrh9k4DbDNd6dE1F
        r1B4m/aJgPyEWNO5jzu90arCFW1/Hn/W/yOcGVwAnuaWDq7U7aTwVgLYqr9LFkIFbN68Gerxr0Xah4/U
        MbgpivoRw7YM3vb+Uqj9CdzSRrD2C/Cyt5Lt337/bXjy8VVreDEBmDu9Z+za5wS0psXiGmASELPD01qA
        pX0qoC8j+lcM2zIowF2o/Q+Kcig8yaFc9Yq0f31/Pfx1rM8e3AE8DR4FYw0ldu2TkIVP4e1BBbjikdCD
        l0Sh9mnSo+1fqszvqQziCyDwJK9lqCg82fj0VxQ8R/uF+LMr4AG2SGGE4EkcCcA8uNgjKqAkPIAKIHk3
        XibY/nmS9Bj7B6d4BETYtk9uegoT46gAGZ4GOgS2EuBk++Tfudd2DBZuziKk0R6aHwfwXHQH99rBk1X/
        rRgJhd+0aRM04jpg1T5fgDo6gmFbxthcHm7bPhGgjFTQ9tNw/+9s+5wA8rzgbutRWLhOVncC7iw8iTA8
        ydfXJmGkJNtOwHFlpFlAYYgfg7dpnyQtKpxhWwaBg2zbJ4nE6z7d9yewBdCJ9smpdK/jBF7WZhCMA1+K
        AGFwS3TwYKSbLojmTQ+mAy9/BJ4kI2CHBZ4vIC2aCAhk2JYxNJX52rZPGpSw8788OV64fZ6AGwea4WF/
        Gzz9RIdAtuDOwpMIQfODPx9z6+xRiwBc9c/jqk/gN27cCCm+XiLtEwGRPgzbMsamMhfb9okAAk9SwRfA
        gyf/zO1jv6c7OP1IL/R9eBz6zhyHfvw6P0pW+qUKsIY1DPdC78kjcI5ldrALv28SQK4KN1veNQsglz1O
        QLKPp0j7mNRI+welhsaSV23bJ096BQVg/nRoH2174U+4sP1lHuHP00fets/6f7u3EQGX1/6+xhp6v8/d
        8nKZHejEPzcJILnTexouaNVUAIHfsGGDRQCCWwlIJVG8yrAto28o+rlt+3wB5GGnUoGXlgN74Ov5SQrN
        DxFg+7KDe9ZvOhIYrFAE4A14NJEnPqICGDyXr+cn4GxjhVlAkJsrtKmiBNonkf+cYVtmtjbrh1btY67g
        TQ8Hzz3uluGi+JlhwkYANozR4+EahEcBXwB50TF09gNhcBKR9vvPHLODd8d7/tlB6/a5fDZ3GTy2u5sF
        rF+/HuQe2+CMUmHTPknYDxm29SD0F5yAPvrQ03QF4D/rJy86LrSfshfAzvPyonyr9snrsM/0Y9bQ/IgI
        uI9APt7eVgIKstT4Z/bwJOdb3reC5+K2aSMcjo/gCYj6nOHaD4LPEnjyokPFrv/89rm3PP2t2KhN+5yA
        +7oxKiEwMACS4+Pgcg+7txeKCDyX0c5TECWX0qfABP7e7Ch+X1hA9/H3BAWsW7cOfF02w7nUKCYgcpbh
        2g9eCdqJgNO4/+ef+/z2BQUweOEwWKEsIsA6CCoCT0IEEHi+AAJPsnbtWtgnDybtEwHizwMMjWX7iYC9
        aqVo+ysmYDnwTgiwbZ/Ar1mzBnL8vKiAXpViH8O1H0NjaSZZ+auUCaLtWwsQAuaHwQplOQIEwLl0H39X
        tH0iIMFzGycgk+Haj6GhxJMIqFcl2bW/ogKWA++EAKH2OQGJHm7QliRFAXLxdwO6uoKfEgHv5aWLtm8R
        IATMD4MVyooLmIOuYxYBtu2vXr0aigO8oCU2DFoTQ37KcIXH2Fh6a6J2J8jwHkCofbLb6289sUIChID5
        QbhF4UnsBfDb34hfj0SFwOn48FsMU3xwu9tCtrzv5qoF23dOAA/WNi+gfRLuFLBtf82a1VAa6I3wEvgw
        QXKSYYqPoaE4n9vzH9WkQ2R4mBU8yfwl25sc2zBYobyA9kkMF7rt2nfdsB6qg30YfAQe/hINwxQffV3R
        eu6Gh9zttRVlQ0RoiFnAnqpSeEoABMFJGKhQzPAkQtD8INyiAkzwJE8/mYVd2lyzgC3r18EbEQFwGsEJ
        /NnECFwEJesYpvjMVGd8F68GD/m3vGNVWmjJz4CPSnJBj/cLhs6TcGdmFBYERZDviWRF4Unm6N3o7Ykh
        mMTb4v2JCnP7Wn8vG3jpw87koO8yTMeD0Cf4AoQed829Xgt3r/Qj2FLhSayBH+LN1eXzHXCxpw1GMJd6
        2+GBYRz/TAiai6n5Pw93QX9xJrTjnZ+f6xYmYA38X2QIHx46kqUnGN7io6/bGWcFzxPAf9ip//0bsHAL
        IZ6j/cmBbpDHJ4NfuBx8w+TgEyYDn1AZSGMSYaKvywaaH9L+DAzgfcv+yFAe/Fq66fkwUYrwUmin8DLo
        TJbGMbzFZ642/ycI/0SsfRryqLu2EP4ycg4BFxHgoP2YRCW47gigcfEOgC1e/rDZ04/GxcvX/Jibe9hJ
        bnjEbnoIvD/e+JyIk8BZBCfwnQjfpZQ/6VZKfsLwnBtDfXG7w/bZiw7d/gZ4fIM87mawQnEgwN0/xAzP
        F7DJ0xc2eVgEcA87xeBJ4rF5E7wM4UnrFB56lPI2huX84NVAIdo+TwB50/Nx61FhcBIH8CQajcaqfb4A
        iUwBhdnpUJSTYZek0ECIReAEL3fID/CGd8g5nygzwdNDnsGnKOBcikzBsJyfueqclxH6vkN4JkBXXwyf
        jg0sS8CdmUugVqthk7s3rNvqAWtdt8MGN09IS02DG5f74K/XJuDRx1fhqxvTpuePeO5/MtwNp3DRa0mQ
        winMGTzXLfBy6ETwbgbfm6K435sS/jLDWtrgOd6wWPvci86539TB58aJJcFzeYJgd6cvwt2Zi3B/9hI8
        1F2Bzw1jJvjr1vAPdZdwb5JhgUfoVowt/DkCr4pEAfIGhrP00dXk/wzhHwvCmwUUmFKFEg7tww8s/o7f
        UZ7gRuaB7jKDHxeA18GX1yaht6kcWrDxUxgzPB7uZnh6yHPwise9KdKfMZzljb5WK8Mj4bqj9rnf8CCZ
        O3oQHpFfdFgCPLfpWUAJX+BRJAT/6NpVGHirkYKfpvByaEXosxgTvMIaXqW4ge3LGMbzzXRF6ku6moKt
        uhptA8IPY76ybZ/75SaS2SO/gy/Io/MlCiB5+skcPL4+ZQVPjoh+vNrYwrcReGydwX99TqUYQfBGvOd3
        61WFvMQ+/srPTHna93VVef+rq9JIMSWYdzAdusq8Kcynuoq8pzMH98KnV4d5kGKxwHObHCKBwJOvt8cH
        oBsX2VNJ0menk6R38bCfbk2Sd7UpZe+0K2WlnUqZrDtF9useVej32cf79ueyVvKd6RLVj8c/POpmGO6Z
        oYujIDyJvQBT62OgG+ycHDx60OV0Uui/tSm9X1yjL3JGO05+b6znTJrhQs/HZJX/6uaMKDw57O9MjSB4
        l3G0/QNlx5GD/xj/s7Qzg0AvjXWfdh/vObN7pr990Djcc+faxd4FEryX/3S6r23wSldL86XOk25dxw4t
        /kvNKzKrVv0N88PjasqA3fUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnEnd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAA79JREFUWEftlM1rHHUYx9MQ0EMPOaQq4l1PBatWk+zObmZmZ2d39n1mZ2bnZWf2
        LbvbxDSFFgTxhdKDBgTFUzFQzMEGLFj1Imiv8YXSVNNEaZBStbvZTf+BHpavz+wODaHaantR2C887DCz
        v9/zeX7f5/mNDDXUUEP9b5QuFEcpDid120lo1hkpbyzHFWNVlPVVMactC1n1TCSTd7iUcphNyqP+skdT
        ziqNUohZ013JGM5tAoBM0bBcvFYs4S2KN2wXpwwbFdVAPKOCAMAmc7fDUnYlJGXEUDz972GUYmWMoirb
        5W0CwMlyDZ/MzWH91Xl0jtWxWyuh61ro2gY6lk6/BXQdCzsVF5erZZxzHNRlFZQcTCy1HYgmq9PRxJi/
        /f2lujUmX6xs6k4F7zfncO34AnbrFXRMDT+oCj7Oq3hbUdFUNNiUxMrmMZuR8Xoqi4+SSaxJMbRTcXR0
        BeuujdOqjpCYxLSQ2Jzk44yf5l5ppdkxiqW8U+2drh/DzycW0K04tFEeHU3BvG6CvEdCNXfI+4sxpfAu
        eX8qmtVOkvfv8GnlMy4lt2cSObhSCu0oh7bAYict4SfLwEI6h1f4WO9lLrZ0lBX3n4Zemh2nuGSXZ/Hl
        4iJ2GzV0DA2dwiD5TU0GNZ8HUKbmO+Avu0dsIneAvHfJe/zqAURYtPgwWlwIO5kkzmsaGC6Gl2ail14M
        C+P9RYVyfYLiaqPawI8njpO39iC5od6t/jKFD/Bcf9F9RMmf9bz/VuAJYGYAwIbQmgmiTc/fkY2xSAwv
        hCJXjzD8hAfwzXytieuLdORFaipT36u+DyDjKzXvJe/R8T/u5/lbEcBjBNC7KAh3q2+xTB+gFZqmCGBD
        zkDiRBxhuK89gDufN5v9ju5aBR9gr/qOmsOKqnne/+HneKCYWPq3s0J0r3oPIBxAiyEAZgq3gpM4J4p4
        Psjd8fy/UHVr2LDNv6z+C02FqVEDquaqv/8DFRRT5xNRCZ/y/P7qPQBK/n1gEizDegAXvO4/SKO3ViuW
        sWXSCXjVE8ANLY83dcPz3jv6s5JqDprmH4jmfpzmfnkqIvUWOQHbYQLwq18PTkEYJF+jONhfQKM3ThfP
        lTrdatfpBH7RVTQKFlK6/TsBBPt/egjR3Idp9G4prIBrTIBiGhLDed5foeT7C6Jb7xDdelsV00HJKIKu
        3Q0CeNr//NCiuX+G5n4zHo4gHuIpOb9FAIf8z/tFd/6TGdN9L204SwQw4b9+ZB2diT5Bc/8Bjd6HBPCU
        /3qooYYa6r+gkZE/ASMaJuJdyeKkAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnAnswer.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAA8NJREFUWEftls9TE2ccxkOnJ8+e/Q+csa0zbW21LbEBDL8aTTaAFREIRDCwyW7G
        H0GkijNaxk4PPfoLbCfFcWNIdpOgCeAEDx68FcIfkeDFThlav33el1eHLUkapuRUnpnnkOw3+3ye3ffd
        jWVXu/qnfnoRct96ruQnFv00sSjT99lhupkdohtZ39qt54EffnxxXkxWpsP3liX4wWd3l98XX5XXjey5
        /PgzL11b6KOr8HfzvTQ230NX5rq5AXNAjJpknczVHJ1aMR07ci/nRvg6TAAIH7pTAcT1Z96/ri30bwDM
        ezYBnKHRuS4azXTZxKhJCN9rnVop1E7lPmKfv7ifcwOAh39+d5kQTp/eWX7Ah8sJ7V8Vbw+ATBddzpxu
        F6MmIfwAwql2Mlf48n5uBAA8XLRnAOsAkMR4aaH9ytb23W/b00imc0yMmoTwJoTTVzDCCe15uGjPwt1i
        tLwQrpdpzwCeiFGTAOBlAGjPATa1XwdAZeFMCB8v055G0p1rl56erBHj74TwcdaeAWxuD4ARMVKZri54
        GhhA0fbpTgqlT62IUZMAMFmkPbv8BVz+D8XYvwvN98CvS7QvAOCgGDUJ7TNF2rOVDy/lP769VHT7FtXY
        XE94A2Bj64l7vwqAouFMCE+ifQYAkwC4DgAv2jcB4INPbi/tBcCW21ZSo+luq6k9Lv2FxMlvxeHq64J+
        qmY0c+Ylb58+TcFoOwU092IgIr0nRqqv0GynnYfPdJCitZEScZPy2O0Xh6uvoNFhUSPthhpB+GNmAESl
        NWVGOiJGqi85LO1TIm2rarSN1CgAZiRSYlJBiUslVzQRce+Y/A8lB8LfqDE3qXGJW9FdedVwHRYj74QF
        exAPqd/g37FzknioXb6Z9Ul4g1rxOt9/Zc4jJrcp/yNXiAPoADCYXaQmXGtqyjmkzjr59mLPByV1vCAn
        v6HhRAvcTENGE/ngIaOZ5EQrXXzaMcFPuF0FYk6LX3NOcICERMEkAFLwrJOU1ImF80/aOhC+ysJZEA+H
        fUYjnYMH9WNwA2z/Q5xy+5KjLoscORFC+zdBhAdnNwAEBPlZ+Jb2ANDtHGAg3kBn4/X/fXEMaw6HYjhX
        N4cHkg4eXq49Cz8br9uZ1Tk43bJPnnHogSTCU8crbu+N23Zue8jTrZaBh812X7TlpWy0ivYtvD0DKNbe
        G9tBgLfy/mqv6Q8fsw5ojeHBaONrn166fX/Mlhc/q456f67b0/OLrd4zXT/e96hO79Pqcn2a7ZVH+/rP
        Xu1ovnu6tvJ/Rrv6n8hi+RtqTyqAg2BIVAAAAABJRU5ErkJggg==
</value>
  </data>
</root>